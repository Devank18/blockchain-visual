{"version":3,"sources":["Utils/SaveDataInLocalStorage.js","Components/InputFormContainer/InputFormContainer.js","Utils/GenerateHashForData.js","Components/TransactionCard/TransactionCard.js","Components/BlockchainContainer/BlockchainContainer.js","Views/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SaveDataInLocalStorage","data","transactions","localStorage","getItem","JSON","parse","push","setItem","stringify","InputFormContainer","props","handleSubmit","bind","event","preventDefault","className","onChange","this","style","display","gridTemplateColumns","name","type","placeholder","id","defaultValue","value","selected","disabled","hidden","marginTop","onClick","__firstname","document","getElementById","__lastname","__amount","__currency_name","__sender_id","__receiver_id","timeStamp","Date","getTime","console","log","nonce","newTransactionObject","sha256","React","Component","TransactionCard","transactionData","useState","transactionDetailsModalState","setTransactionDetailsModalState","TransactionID","alignItems","SenderUniqueID","ReceiverUniqueID","isOpen","onRequestClose","overlay","backgroundColor","marginRight","marginLeft","marginBottom","width","height","overflow","boxSizing","content","border","boxShadow","TransactionUniqueHashAddress","words","FirstName","LastName","TransactionCurrency","TransactionAmount","ReactModal","setAppElement","BlockchainContainer","transactionState","map","index","firstname","lastname","amount","currency_name","sender_id","receiver_id","unique_hash","Home","role","href","target","rel","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a4de5c1d.chunk.js","sourcesContent":["\r\nfunction SaveDataInLocalStorage(data) {\r\n  \r\n  let transactions;\r\n  if (!data) return;\r\n  \r\n  if (localStorage.getItem('transactions') === null) {\r\n    transactions = [];\r\n  } else {\r\n    transactions = JSON.parse(localStorage.getItem('transactions'));\r\n  }\r\n\r\n  transactions.push(data);\r\n  localStorage.setItem('transactions', JSON.stringify(transactions));\r\n\r\n}\r\n\r\nexport default SaveDataInLocalStorage;","import React from \"react\";\r\nimport GenerateHashForData from \"../../Utils/GenerateHashForData\";\r\nimport SaveDataInLocalStorage from \"../../Utils/SaveDataInLocalStorage\";\r\nimport \"./style.css\";\r\n\r\nexport default class InputFormContainer extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"InputFormContainer\">\r\n        <form className=\"input-form\" onChange={this.handleSubmit}>\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'auto auto'\r\n          }}>\r\n            <div className=\"form-input\">\r\n              <label name=\"first-name\" className=\"input-label\">First Name</label>\r\n              <input type=\"text\"\r\n                name=\"first-name\"\r\n                placeholder=\"Eg: John\" \r\n                className=\"input-box\"\r\n                id=\"first-name-input\"\r\n              />\r\n            </div>\r\n            <div className=\"form-input\">\r\n              <label name=\"last-name\" className=\"input-label\">Last Name</label>\r\n              <input type=\"text\"\r\n                name=\"last-name\"\r\n                placeholder=\"Eg: Doe\"\r\n                className=\"input-box\"\r\n                id=\"last-name-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-input\">\r\n            <label name=\"amount\" className=\"input-label\">Enter Amount</label>\r\n            <input type=\"number\"\r\n              name=\"amount\"\r\n              placeholder=\"Enter amount of coins\"\r\n              className=\"input-box\"\r\n              id=\"amount-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-input\">\r\n            <label name=\"currency-name\" className=\"input-label\">Select a Currency</label>\r\n            <select defaultValue=\"none\" className=\"input-select\" id=\"currency-input\">\r\n              <option value=\"none\" selected disabled hidden>\r\n                Select an Option\r\n              </option>\r\n              <option value=\"bitcoin\">\r\n                Bitcoin\r\n              </option>\r\n              <option value=\"ethereum\">\r\n                Ethereum\r\n              </option>\r\n              <option value=\"litecoin\">\r\n                Litecoin\r\n              </option>\r\n              <option value=\"dogecoin\">\r\n                Dogecoin\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-input\">\r\n            <label name=\"sender-id\" className=\"input-label\">Your ID</label>\r\n            <input type=\"text\"\r\n              name=\"sender-id\"\r\n              placeholder=\"Eg: e567************09\"\r\n              className=\"input-box\"\r\n              id=\"sender-id-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-input\">\r\n            <label name=\"receiver-id\" className=\"input-label\">Receiver's ID</label>\r\n            <input type=\"text\"\r\n              name=\"receiver-id\"\r\n              placeholder=\"Eg: e567************09\"\r\n              className=\"input-box\"\r\n              id=\"receiver-id-input\"\r\n            />\r\n          </div>\r\n          <button \r\n            className=\"primary-button\"\r\n            style={{\r\n              marginTop: '1em'\r\n            }}\r\n            onClick={() => {\r\n              // retrieving data from the input boxes\r\n              let __firstname = document.getElementById('first-name-input').value;\r\n              let __lastname = document.getElementById('last-name-input').value;\r\n              let __amount = document.getElementById('amount-input').value;\r\n              let __currency_name = document.getElementById('currency-input').value;\r\n              let __sender_id = document.getElementById('sender-id-input').value;\r\n              let __receiver_id = document.getElementById('receiver-id-input').value;\r\n              \r\n              // generating the current timestamp\r\n              const currentDateTime = new Date();\r\n              const timeStamp = currentDateTime.getTime();\r\n              console.log(timeStamp)\r\n\r\n              const newTransactionObject = {\r\n                'firstname': __firstname,\r\n                'lastname': __lastname,\r\n                'amount': __amount,\r\n                'currency_name': __currency_name,\r\n                'sender_id': __sender_id,\r\n                'receiver_id': __receiver_id,\r\n                \r\n                // the unique hash will be created\r\n                // with a very easy string hashing method\r\n                // using a timestamp.\r\n                'unique_hash': GenerateHashForData({__firstname, __lastname,\r\n                  __amount, __currency_name, __sender_id, __receiver_id\r\n                }, timeStamp)\r\n              }\r\n\r\n              // storing the data object as a new\r\n              // transaction entry in localStorage\r\n              SaveDataInLocalStorage(newTransactionObject);\r\n              \r\n            }}\r\n          >\r\n            Create a new Transaction\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import sha256 from 'crypto-js/sha256';\r\n\r\nexport default function GenerateHashForData(data, nonce) {\r\n  return sha256(nonce + data);\r\n}\r\n","\r\nimport \"./style.css\";\r\nimport React, { useState } from 'react';\r\nimport ReactModal from \"react-modal\";\r\n\r\nReactModal.setAppElement('#root');\r\nexport default function TransactionCard(transactionData) {\r\n\r\n  const [transactionDetailsModalState, setTransactionDetailsModalState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"TransactionCard\"\r\n      onClick={() => setTransactionDetailsModalState(true)}\r\n    >\r\n      <p>Transaction #{transactionData.TransactionID}</p>\r\n      <span style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: 'auto',\r\n        alignItems: 'center'\r\n      }}>Sender <b>{transactionData.SenderUniqueID}</b></span>\r\n      <span style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: 'auto',\r\n        alignItems: 'center'\r\n      }}>Receiver <b>{transactionData.ReceiverUniqueID}</b></span>\r\n\r\n    <ReactModal \r\n      isOpen={transactionDetailsModalState}\r\n      onRequestClose={() => setTransactionDetailsModalState(false)}\r\n      style={{\r\n        overlay: {\r\n          backgroundColor: 'rgba(0, 0, 0, 0 )',\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          marginTop: 'auto',\r\n          marginBottom: 'auto',\r\n          width: '900px',\r\n          height: '700px',\r\n          overflow: 'hidden',\r\n          boxSizing: 'border-box'\r\n        },\r\n        content: {\r\n          border: 'none',\r\n          boxShadow: '12px 24px 32px rgba(0, 0, 0, 0.225)'\r\n        }\r\n      }}\r\n    >\r\n        <div className=\"TransactionDetailsModal\">\r\n          <span>\r\n            <p>Unique Hash Address</p>\r\n            <h3 className=\"unique-id\">{transactionData.TransactionUniqueHashAddress.words}</h3>\r\n          </span>\r\n\r\n          <span>\r\n            <p>Transaction done by</p>\r\n            <span><b>{transactionData.FirstName} {transactionData.LastName}</b></span>\r\n          </span>\r\n\r\n          <span>\r\n            <p>Sender ID</p>\r\n            <span><b>{transactionData.SenderUniqueID}</b></span>\r\n          </span>\r\n\r\n          <span>\r\n            <p>Receiver ID</p>\r\n            <span><b>{transactionData.ReceiverUniqueID}</b></span>\r\n          </span>\r\n\r\n          <span>\r\n            <p>Amount of <u>{transactionData.TransactionCurrency}</u> transferred</p>\r\n            <span><b>{transactionData.TransactionAmount}</b></span>\r\n          </span>\r\n\r\n        </div>\r\n    </ReactModal>\r\n    </div>\r\n    \r\n  )\r\n}","import React, { useState } from 'react';\r\nimport TransactionCard from '../TransactionCard/TransactionCard';\r\nimport \"./style.css\";\r\n\r\n\r\nexport default function BlockchainContainer() {\r\n  \r\n  const [transactionState] = useState(JSON.parse(localStorage.getItem('transactions')));\r\n  console.log('transaction data> ', transactionState)\r\n\r\n  if (JSON.parse(localStorage.getItem('transactions')) === '\\0') {\r\n    console.log('1272632')\r\n    localStorage.setItem('transactions', JSON.stringify([{\r\n      'firstname': '',\r\n      'lastname': '',\r\n      'amount': '',\r\n      'currency_name': '',\r\n      'sender_id': '',\r\n      'receiver_id': '',\r\n      'unique_hash': ''\r\n    }]))\r\n  } else if (JSON.parse(localStorage.getItem('transactions')) !== '\\0') {\r\n    console.log('000000000')\r\n  } else {\r\n    console.log('working')\r\n  }\r\n\r\n  return (\r\n    <div className=\"BlockchainContainer\">\r\n      {\r\n        transactionState.map((data, index) => (\r\n          <TransactionCard TransactionID={index}\r\n            FirstName={data.firstname}\r\n            LastName={data.lastname}\r\n            TransactionAmount={data.amount}\r\n            TransactionCurrency={data.currency_name}\r\n            SenderUniqueID={data.sender_id}\r\n            ReceiverUniqueID={data.receiver_id}\r\n            TransactionUniqueHashAddress={data.unique_hash}\r\n          />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default class BlockchainContainer extends React.Component {\r\n//   transactionData;    // declaring transactionData containing object\r\n//   constructor(props) {\r\n\r\n//     const [state, setState] = useState()\r\n\r\n//     super(props);\r\n//     this.state = {\r\n//       firstname: '',\r\n//       lastname: '',\r\n//       amount: '',\r\n//       currency: '',\r\n//       sender_id: '',\r\n//       receiver_id: '',\r\n//       unique_hash: ''\r\n//     }\r\n//     // console.log(JSON.parse(localStorage.getItem('transactions')));\r\n//     // console.log(localStorage.getItem('transactions'));\r\n//     this.transactionData = JSON.parse(localStorage.getItem('transactions'));\r\n//     if (localStorage.getItem('transactions')) {\r\n//       this.setState({\r\n//         firstname: this.transactionData.firstname,\r\n//         lastname: this.transactionData.lastname,\r\n//         amount: this.transactionData.amount,\r\n//         currency: this.transactionData.currency_name,\r\n//         sender_id: this.transactionData.sender_id,\r\n//         receiver_id: this.transactionData.receiver_id,\r\n//         unique_hash: this.transactionData.unique_hash\r\n//       })\r\n//     } else {\r\n//       this.setState({\r\n//         firstname: '',\r\n//         lastname: '',\r\n//         amount: '',\r\n//         currency: '',\r\n//         sender_id: '',\r\n//         receiver_id: '',\r\n//         unique_hash: ''\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   // React Life Cycle\r\n//   // componentDidMount() {\r\n//   //   console.log(JSON.parse(localStorage.getItem('transactions')));\r\n//   //   console.log(localStorage.getItem('transactions'));\r\n//   //   this.transactionData = JSON.parse(localStorage.getItem('transactions'));\r\n//   //   if (localStorage.getItem('transactions')) {\r\n//   //     this.setState({\r\n//   //       firstname: this.transactionData.firstname,\r\n//   //       lastname: this.transactionData.lastname,\r\n//   //       amount: this.transactionData.amount,\r\n//   //       currency: this.transactionData.currency_name,\r\n//   //       sender_id: this.transactionData.sender_id,\r\n//   //       receiver_id: this.transactionData.receiver_id,\r\n//   //       unique_hash: this.transactionData.unique_hash\r\n//   //     })\r\n//   //   } else {\r\n//   //     this.setState({\r\n//   //       firstname: '',\r\n//   //       lastname: '',\r\n//   //       amount: '',\r\n//   //       currency: '',\r\n//   //       sender_id: '',\r\n//   //       receiver_id: '',\r\n//   //       unique_hash: ''\r\n//   //     })\r\n//   //   }\r\n//   // }\r\n  \r\n//   render() {\r\n//     return (\r\n//       <div className=\"BlockchainContainer\">\r\n//         {this.state.firstname}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }","import \"./style.css\";\r\nimport React from \"react\";\r\nimport InputFormContainer from \"../Components/InputFormContainer/InputFormContainer\";\r\nimport BlockchainContainer from \"../Components/BlockchainContainer/BlockchainContainer\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"info-container\">\r\n          <div className=\"introduction-section\">\r\n            <h2>Blockchain Visual <span role=\"img\" aria-label=\"money-emoji\">💰</span><span role=\"img\" aria-label=\"rocket\">🚀</span></h2>\r\n            <p className=\"introduction-content\">\r\n              This project is mainly focused on teaching people the basics for Blockchain technology using visuals. This project is developed using React JS.\r\n              You just have to create a new transaction by adding details for the same and there will be a new block created for that which will be having your details and unique hash-address.\r\n              Feel free to play around this application. If you would like to contribute to this project, <a href=\"https://github.com/yashsehgal/blockchain-visual\" target=\"_blank\" rel=\"noreferrer\">check it on github.</a>\r\n            </p>\r\n          </div>\r\n          <InputFormContainer />\r\n        </div>\r\n        <BlockchainContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import \"./Styles/main.css\";\nimport React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./Views/Home\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"\">\n        <HashRouter basename=\"/\">\n          <Route path=\"/\" exact component={Home} />\n        </HashRouter>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}